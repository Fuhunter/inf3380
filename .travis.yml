# Use new trusty images, should yield newer compilers and packages
sudo: required
dist: precise
language: c
notifications:
  email: false


before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y libopencv-dev
  - test -n $CC && unset CC

env:
  - OMP_NUM_THREADS=4

install:
  #- if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  - gem install coveralls-lcov
  # install latest LCOV (1.9 was failing)
  - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
  - tar xf lcov_1.11.orig.tar.gz
  - sudo make -C lcov-1.11/ install
  #- sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 90
  #- sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90
  #- sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.8 90
  - sudo apt-get install liblapack-dev libblas-dev libboost-dev #libarmadillo-dev
  - wget http://sourceforge.net/projects/arma/files/armadillo-6.600.4.tar.gz
  - tar xf armadillo-6.600.4.tar.gz
  - cd armadillo-6.600.4 && cmake . && make && sudo make install && cd -
  - sudo apt-get install libopenmpi-dev

before_script:
  - lcov --version
  - gcov --version
  - g++ --version
  - PARENTDIR=$(pwd)/oblig2
  - mkdir $PARENTDIR/build && cd $PARENTDIR/build
  - lcov --directory $PARENTDIR/build --zerocounters

script:
  - cd $PARENTDIR/build
  #- cmake -Dcoverage=ON -DCMAKE_CXX_COMPILER=$COMPILER $PARENTDIR
  - cmake -Dcoverage=ON $PARENTDIR
  - make
  - ./tests.x

after_success:
  - lcov --directory $PARENTDIR/build --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info 'tests/*' 'app/*' 'external/*' 'cmake/*' '/usr/*' --output-file coverage.info # filter out system and test code
  - lcov --list coverage.info # debug before upload
  - coveralls-lcov coverage.info #--repo-token _____ coverage.info # uploads to coveralls
